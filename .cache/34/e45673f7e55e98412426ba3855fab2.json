{"id":"ri8j","dependencies":[{"name":"/home/abtin/Desktop/Pinote/package.json","includedInParent":true,"mtime":1632551681475},{"name":"/home/abtin/Desktop/Pinote/node_modules/refractor/package.json","includedInParent":true,"mtime":1632151213327}],"generated":{"js":"\"use strict\";function e(e){e.languages.elm={comment:/--.*|\\{-[\\s\\S]*?-\\}/,char:{pattern:/'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,greedy:!0},string:[{pattern:/\"\"\"[\\s\\S]*?\"\"\"/,greedy:!0},{pattern:/\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,greedy:!0}],\"import-statement\":{pattern:/(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,lookbehind:!0,inside:{keyword:/\\b(?:import|as|exposing)\\b/}},keyword:/\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,builtin:/\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,number:/\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,operator:/\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,hvariable:/\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,constant:/\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,punctuation:/[{}[\\]|(),.:]/}}module.exports=e,e.displayName=\"elm\",e.aliases=[];"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":6,"column":0},"generated":{"line":1,"column":13}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":6,"column":0},"generated":{"line":1,"column":22}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":6,"column":0},"generated":{"line":1,"column":24}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":7,"column":0},"generated":{"line":1,"column":27}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":7,"column":0},"generated":{"line":1,"column":29}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":7,"column":0},"generated":{"line":1,"column":39}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":7,"column":0},"generated":{"line":1,"column":43}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":8,"column":0},"generated":{"line":1,"column":44}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":8,"column":0},"generated":{"line":1,"column":52}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":9,"column":0},"generated":{"line":1,"column":74}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":9,"column":0},"generated":{"line":1,"column":79}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":10,"column":0},"generated":{"line":1,"column":80}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":10,"column":0},"generated":{"line":1,"column":88}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":11,"column":0},"generated":{"line":1,"column":144}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":11,"column":0},"generated":{"line":1,"column":152}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":13,"column":0},"generated":{"line":1,"column":155}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":13,"column":0},"generated":{"line":1,"column":162}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":14,"column":0},"generated":{"line":1,"column":163}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":16,"column":0},"generated":{"line":1,"column":164}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":16,"column":0},"generated":{"line":1,"column":172}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":17,"column":0},"generated":{"line":1,"column":189}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":17,"column":0},"generated":{"line":1,"column":197}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":19,"column":0},"generated":{"line":1,"column":200}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":20,"column":0},"generated":{"line":1,"column":201}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":20,"column":0},"generated":{"line":1,"column":209}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":21,"column":0},"generated":{"line":1,"column":233}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":21,"column":0},"generated":{"line":1,"column":241}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":24,"column":0},"generated":{"line":1,"column":245}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":24,"column":0},"generated":{"line":1,"column":264}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":28,"column":0},"generated":{"line":1,"column":265}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":29,"column":0},"generated":{"line":1,"column":273}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":30,"column":0},"generated":{"line":1,"column":377}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":30,"column":0},"generated":{"line":1,"column":389}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":31,"column":0},"generated":{"line":1,"column":391}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":31,"column":0},"generated":{"line":1,"column":398}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":32,"column":0},"generated":{"line":1,"column":399}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":32,"column":0},"generated":{"line":1,"column":407}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":35,"column":0},"generated":{"line":1,"column":438}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":36,"column":0},"generated":{"line":1,"column":446}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":38,"column":0},"generated":{"line":1,"column":528}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":39,"column":0},"generated":{"line":1,"column":536}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":41,"column":0},"generated":{"line":1,"column":786}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":41,"column":0},"generated":{"line":1,"column":793}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":49,"column":0},"generated":{"line":1,"column":844}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":49,"column":0},"generated":{"line":1,"column":853}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":51,"column":0},"generated":{"line":1,"column":911}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":51,"column":0},"generated":{"line":1,"column":921}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":52,"column":0},"generated":{"line":1,"column":951}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":52,"column":0},"generated":{"line":1,"column":960}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":53,"column":0},"generated":{"line":1,"column":990}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":53,"column":0},"generated":{"line":1,"column":1002}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":3,"column":0},"generated":{"line":1,"column":1019}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":3,"column":0},"generated":{"line":1,"column":1026}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":3,"column":0},"generated":{"line":1,"column":1034}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":4,"column":0},"generated":{"line":1,"column":1036}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":4,"column":0},"generated":{"line":1,"column":1038}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":4,"column":0},"generated":{"line":1,"column":1050}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":5,"column":0},"generated":{"line":1,"column":1056}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":5,"column":0},"generated":{"line":1,"column":1058}},{"source":"../../node_modules/refractor/lang/elm.js","original":{"line":5,"column":0},"generated":{"line":1,"column":1066}}],"sources":{"../../node_modules/refractor/lang/elm.js":"'use strict'\n\nmodule.exports = elm\nelm.displayName = 'elm'\nelm.aliases = []\nfunction elm(Prism) {\n  Prism.languages.elm = {\n    comment: /--.*|\\{-[\\s\\S]*?-\\}/,\n    char: {\n      pattern: /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,\n      greedy: true\n    },\n    string: [\n      {\n        // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      }\n    ],\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:import|as|exposing)\\b/\n      }\n    },\n    keyword:\n      /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n    // decimal integers and floating point numbers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n    // In Elm, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n    punctuation: /[{}[\\]|(),.:]/\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"679c26cbdb687de1dc8b710a24b7a510","cacheData":{"env":{}}}