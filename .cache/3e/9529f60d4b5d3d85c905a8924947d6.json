{"id":"yMBZ","dependencies":[{"name":"/home/abtin/Desktop/Pinote/package.json","includedInParent":true,"mtime":1632426853264},{"name":"/home/abtin/Desktop/Pinote/node_modules/refractor/package.json","includedInParent":true,"mtime":1632151213327}],"generated":{"js":"\"use strict\";function e(e){e.languages.clojure={comment:/;.*/,string:{pattern:/\"(?:[^\"\\\\]|\\\\.)*\"/,greedy:!0},operator:/(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i,keyword:{pattern:/([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def-|defn|defn-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,lookbehind:!0},boolean:/\\b(?:true|false|nil)\\b/,number:/\\b[\\da-f]+\\b/i,punctuation:/[{}\\[\\](),]/}}module.exports=e,e.displayName=\"clojure\",e.aliases=[];"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":6,"column":0},"generated":{"line":1,"column":13}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":6,"column":0},"generated":{"line":1,"column":22}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":6,"column":0},"generated":{"line":1,"column":24}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":8,"column":0},"generated":{"line":1,"column":27}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":8,"column":0},"generated":{"line":1,"column":29}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":8,"column":0},"generated":{"line":1,"column":39}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":8,"column":0},"generated":{"line":1,"column":47}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":9,"column":0},"generated":{"line":1,"column":48}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":9,"column":0},"generated":{"line":1,"column":56}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":10,"column":0},"generated":{"line":1,"column":62}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":10,"column":0},"generated":{"line":1,"column":69}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":11,"column":0},"generated":{"line":1,"column":70}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":11,"column":0},"generated":{"line":1,"column":78}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":12,"column":0},"generated":{"line":1,"column":98}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":12,"column":0},"generated":{"line":1,"column":106}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":14,"column":0},"generated":{"line":1,"column":109}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":14,"column":0},"generated":{"line":1,"column":118}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":16,"column":0},"generated":{"line":1,"column":153}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":16,"column":0},"generated":{"line":1,"column":161}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":17,"column":0},"generated":{"line":1,"column":162}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":18,"column":0},"generated":{"line":1,"column":170}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":19,"column":0},"generated":{"line":1,"column":2723}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":19,"column":0},"generated":{"line":1,"column":2735}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":21,"column":0},"generated":{"line":1,"column":2738}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":21,"column":0},"generated":{"line":1,"column":2746}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":22,"column":0},"generated":{"line":1,"column":2771}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":22,"column":0},"generated":{"line":1,"column":2778}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":23,"column":0},"generated":{"line":1,"column":2794}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":23,"column":0},"generated":{"line":1,"column":2806}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":3,"column":0},"generated":{"line":1,"column":2821}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":3,"column":0},"generated":{"line":1,"column":2828}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":3,"column":0},"generated":{"line":1,"column":2836}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":4,"column":0},"generated":{"line":1,"column":2838}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":4,"column":0},"generated":{"line":1,"column":2840}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":4,"column":0},"generated":{"line":1,"column":2852}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":5,"column":0},"generated":{"line":1,"column":2862}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":5,"column":0},"generated":{"line":1,"column":2864}},{"source":"../../node_modules/refractor/lang/clojure.js","original":{"line":5,"column":0},"generated":{"line":1,"column":2872}}],"sources":{"../../node_modules/refractor/lang/clojure.js":"'use strict'\n\nmodule.exports = clojure\nclojure.displayName = 'clojure'\nclojure.aliases = []\nfunction clojure(Prism) {\n  // Copied from https://github.com/jeluard/prism-clojure\n  Prism.languages.clojure = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: true\n    },\n    operator: /(?:::|[:|'])\\b[a-z][\\w*+!?-]*\\b/i,\n    //used for symbols and keywords\n    keyword: {\n      pattern:\n        /([^\\w+*'?-])(?:def|if|do|let|\\.\\.|quote|var|->>|->|fn|loop|recur|throw|try|monitor-enter|\\.|new|set!|def-|defn|defn-|defmacro|defmulti|defmethod|defstruct|defonce|declare|definline|definterface|defprotocol|==|defrecord|>=|deftype|<=|defproject|ns|\\*|\\+|-|\\/|<|=|>|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|conj|cons|constantly|cond|if-not|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|deref|difference|disj|dissoc|distinct|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|for|fnseq|frest|gensym|get-proxy-class|get|hash-map|hash-set|identical\\?|identity|if-let|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|line-seq|list\\*|list|load|load-file|locking|long|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|name|namespace|neg\\?|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|time|to-array|to-array-2d|tree-seq|true\\?|union|up|update-proxy|val|vals|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[^\\w+*'?-])/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:true|false|nil)\\b/,\n    number: /\\b[\\da-f]+\\b/i,\n    punctuation: /[{}\\[\\](),]/\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"219d323e74e411e1fa9ff4337cb6979d","cacheData":{"env":{}}}