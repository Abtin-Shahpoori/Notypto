{"id":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","dependencies":[{"name":"/home/abtin/Desktop/Pinote/package.json","includedInParent":true,"mtime":1632153636934},{"name":"/home/abtin/Desktop/Pinote/node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/package.json","includedInParent":true,"mtime":1632120797337}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = escapeStringRegexp;\n\nfunction escapeStringRegexp(string) {\n  if (typeof string !== 'string') {\n    throw new TypeError('Expected a string');\n  } // Escape characters with special meaning either inside or outside character sets.\n  // Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\n\n  return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":1,"column":15}},{"name":"escapeStringRegexp","generated":{"line":8,"column":9},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":1,"column":24}},{"generated":{"line":8,"column":27},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":1,"column":15}},{"name":"string","generated":{"line":8,"column":28},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":1,"column":43}},{"generated":{"line":8,"column":34},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":1,"column":15}},{"generated":{"line":8,"column":36},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":1,"column":51}},{"generated":{"line":9,"column":0},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":2,"column":1}},{"generated":{"line":9,"column":6},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":2,"column":5}},{"name":"string","generated":{"line":9,"column":13},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":2,"column":12}},{"generated":{"line":9,"column":19},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":2,"column":5}},{"generated":{"line":9,"column":24},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":2,"column":23}},{"generated":{"line":9,"column":32},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":2,"column":1}},{"generated":{"line":9,"column":34},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":2,"column":33}},{"generated":{"line":10,"column":0},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":2}},{"generated":{"line":10,"column":10},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":8}},{"name":"TypeError","generated":{"line":10,"column":14},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":12}},{"generated":{"line":10,"column":23},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":8}},{"generated":{"line":10,"column":24},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":22}},{"generated":{"line":10,"column":43},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":8}},{"generated":{"line":10,"column":44},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":2}},{"generated":{"line":11,"column":0},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":4,"column":2}},{"generated":{"line":11,"column":3},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":1,"column":51}},{"generated":{"line":11,"column":4},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":6,"column":1}},{"generated":{"line":12,"column":0},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":7,"column":1}},{"generated":{"line":15,"column":0},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":8,"column":1}},{"name":"string","generated":{"line":15,"column":9},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":8,"column":8}},{"generated":{"line":15,"column":15},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":8,"column":14}},{"name":"replace","generated":{"line":15,"column":16},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":9,"column":3}},{"generated":{"line":15,"column":23},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":8,"column":8}},{"generated":{"line":15,"column":24},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":9,"column":11}},{"generated":{"line":15,"column":45},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":8,"column":8}},{"generated":{"line":15,"column":47},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":9,"column":34}},{"generated":{"line":15,"column":53},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":8,"column":8}},{"name":"replace","generated":{"line":15,"column":55},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":3}},{"generated":{"line":15,"column":62},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":8,"column":8}},{"generated":{"line":15,"column":63},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":11}},{"generated":{"line":15,"column":67},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":8,"column":8}},{"generated":{"line":15,"column":69},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":17}},{"generated":{"line":15,"column":76},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":8,"column":8}},{"generated":{"line":15,"column":77},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":8,"column":1}},{"generated":{"line":16,"column":0},"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":11,"column":1}}],"sources":{"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js":"export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n"},"lineCount":null}},"error":null,"hash":"5c72894fb4baa9bb7cda2ceb95eb5765","cacheData":{"env":{}}}