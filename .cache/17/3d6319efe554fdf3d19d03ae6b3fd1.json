{"id":"../../node_modules/refractor/lang/concurnas.js","dependencies":[{"name":"/home/abtin/Desktop/Pinote/package.json","includedInParent":true,"mtime":1634470489760},{"name":"/home/abtin/Desktop/Pinote/node_modules/refractor/package.json","includedInParent":true,"mtime":1634469781893}],"generated":{"js":"'use strict'\n\nmodule.exports = concurnas\nconcurnas.displayName = 'concurnas'\nconcurnas.aliases = ['conc']\nfunction concurnas(Prism) {\n  Prism.languages.concurnas = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    langext: {\n      pattern: /\\b\\w+\\s*\\|\\|[\\s\\S]+?\\|\\|/,\n      greedy: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /\\b0b[01][01_]*L?\\b|\\b0x(?:[\\da-f_]*\\.)?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfls]?/i,\n    punctuation: /[{}[\\];(),.:]/,\n    operator:\n      /<==|>==|=>|->|<-|<>|\\^|&==|&<>|!|\\?:?|\\.\\?|\\+\\+|--|[-+*/=<>]=?|\\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\\b=?/,\n    annotation: {\n      pattern: /@(?:\\w+:)?(?:\\w+|\\[[^\\]]+\\])?/,\n      alias: 'builtin'\n    }\n  }\n  Prism.languages.insertBefore('concurnas', 'langext', {\n    string: {\n      pattern: /[rs]?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.conc = Prism.languages.concurnas\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/refractor/lang/concurnas.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}}],"sources":{"../../node_modules/refractor/lang/concurnas.js":"'use strict'\n\nmodule.exports = concurnas\nconcurnas.displayName = 'concurnas'\nconcurnas.aliases = ['conc']\nfunction concurnas(Prism) {\n  Prism.languages.concurnas = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    langext: {\n      pattern: /\\b\\w+\\s*\\|\\|[\\s\\S]+?\\|\\|/,\n      greedy: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /\\b0b[01][01_]*L?\\b|\\b0x(?:[\\da-f_]*\\.)?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfls]?/i,\n    punctuation: /[{}[\\];(),.:]/,\n    operator:\n      /<==|>==|=>|->|<-|<>|\\^|&==|&<>|!|\\?:?|\\.\\?|\\+\\+|--|[-+*/=<>]=?|\\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\\b=?/,\n    annotation: {\n      pattern: /@(?:\\w+:)?(?:\\w+|\\[[^\\]]+\\])?/,\n      alias: 'builtin'\n    }\n  }\n  Prism.languages.insertBefore('concurnas', 'langext', {\n    string: {\n      pattern: /[rs]?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.conc = Prism.languages.concurnas\n}\n"},"lineCount":58}},"error":null,"hash":"1b61a0491001a1f8d8a2e21873913635","cacheData":{"env":{}}}