{"id":"CYS6","dependencies":[{"name":"/home/abtin/Desktop/Pinote/package.json","includedInParent":true,"mtime":1632426853264},{"name":"/home/abtin/Desktop/Pinote/node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/package.json","includedInParent":true,"mtime":1632120797337}],"generated":{"js":"\"use strict\";function e(e){if(\"string\"!=typeof e)throw new TypeError(\"Expected a string\");return e.replace(/[|\\\\{}()[\\]^$+*?.]/g,\"\\\\$&\").replace(/-/g,\"\\\\x2d\")}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":11,"column":1},"generated":{"line":1,"column":0}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":1,"column":15},"generated":{"line":1,"column":13}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","name":"escapeStringRegexp","original":{"line":1,"column":24},"generated":{"line":1,"column":22}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","name":"string","original":{"line":1,"column":43},"generated":{"line":1,"column":24}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":2,"column":5},"generated":{"line":1,"column":27}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":2,"column":23},"generated":{"line":1,"column":30}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","name":"string","original":{"line":2,"column":12},"generated":{"line":1,"column":47}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":8},"generated":{"line":1,"column":49}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":8},"generated":{"line":1,"column":55}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","name":"TypeError","original":{"line":3,"column":12},"generated":{"line":1,"column":59}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":3,"column":22},"generated":{"line":1,"column":69}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","name":"string","original":{"line":8,"column":8},"generated":{"line":1,"column":90}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","name":"string","original":{"line":8,"column":8},"generated":{"line":1,"column":97}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","name":"replace","original":{"line":9,"column":3},"generated":{"line":1,"column":99}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":9,"column":11},"generated":{"line":1,"column":107}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":9,"column":34},"generated":{"line":1,"column":129}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","name":"replace","original":{"line":10,"column":3},"generated":{"line":1,"column":137}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":11},"generated":{"line":1,"column":145}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":10,"column":17},"generated":{"line":1,"column":150}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":11,"column":1},"generated":{"line":1,"column":159}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":11,"column":1},"generated":{"line":1,"column":166}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":11,"column":1},"generated":{"line":1,"column":181}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":11,"column":1},"generated":{"line":1,"column":189}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":11,"column":1},"generated":{"line":1,"column":202}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":11,"column":1},"generated":{"line":1,"column":203}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":11,"column":1},"generated":{"line":1,"column":210}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":11,"column":1},"generated":{"line":1,"column":214}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":11,"column":1},"generated":{"line":1,"column":222}},{"source":"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","original":{"line":11,"column":1},"generated":{"line":1,"column":230}}],"sources":{"../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js":"export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n"},"lineCount":null}},"error":null,"hash":"d4c5656b2b99054f4dc7d6b549f39c55","cacheData":{"env":{}}}