{"id":"../../node_modules/refractor/lang/shell-session.js","dependencies":[{"name":"/home/abtin/Desktop/Pinote/package.json","includedInParent":true,"mtime":1632551681475},{"name":"/home/abtin/Desktop/Pinote/node_modules/refractor/package.json","includedInParent":true,"mtime":1632151213327},{"name":"./bash.js","loc":{"line":2,"column":28},"parent":"/home/abtin/Desktop/Pinote/node_modules/refractor/lang/shell-session.js","resolved":"/home/abtin/Desktop/Pinote/node_modules/refractor/lang/bash.js"}],"generated":{"js":"'use strict'\nvar refractorBash = require('./bash.js')\nmodule.exports = shellSession\nshellSession.displayName = 'shellSession'\nshellSession.aliases = []\nfunction shellSession(Prism) {\n  Prism.register(refractorBash)\n  ;(function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n    var strings = [\n      // normal string\n      /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\n      /'[^']*'/.source,\n      /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source, // here doc\n      // 2 capturing groups\n      /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\n    ].join('|')\n    Prism.languages['shell-session'] = {\n      command: {\n        pattern: RegExp(\n          // user info\n          /^(?:[^\\s@:$#*!/\\\\]+@[^\\r\\n@:$#*!/\\\\]+(?::[^\\0-\\x1F$#*?\"<>:;|]+)?|[^\\0-\\x1F$#*?\"<>@:;|]+)?/\n            .source + // shell symbol\n            /[$#]/.source + // bash command\n            /(?:[^\\\\\\r\\n'\"<$]|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<<str>>)+/.source.replace(\n              /<<str>>/g,\n              function () {\n                return strings\n              }\n            ),\n          'm'\n        ),\n        greedy: true,\n        inside: {\n          info: {\n            // foo@bar:~/files$ exit\n            // foo@bar$ exit\n            // ~/files$ exit\n            pattern: /^[^#$]+/,\n            alias: 'punctuation',\n            inside: {\n              user: /^[^\\s@:$#*!/\\\\]+@[^\\r\\n@:$#*!/\\\\]+/,\n              punctuation: /:/,\n              path: /[\\s\\S]+/\n            }\n          },\n          bash: {\n            pattern: /(^[$#]\\s*)\\S[\\s\\S]*/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\n    }\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] =\n      Prism.languages['shell-session']\n  })(Prism)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/refractor/lang/shell-session.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}}],"sources":{"../../node_modules/refractor/lang/shell-session.js":"'use strict'\nvar refractorBash = require('./bash.js')\nmodule.exports = shellSession\nshellSession.displayName = 'shellSession'\nshellSession.aliases = []\nfunction shellSession(Prism) {\n  Prism.register(refractorBash)\n  ;(function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n    var strings = [\n      // normal string\n      /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\n      /'[^']*'/.source,\n      /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source, // here doc\n      // 2 capturing groups\n      /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\n    ].join('|')\n    Prism.languages['shell-session'] = {\n      command: {\n        pattern: RegExp(\n          // user info\n          /^(?:[^\\s@:$#*!/\\\\]+@[^\\r\\n@:$#*!/\\\\]+(?::[^\\0-\\x1F$#*?\"<>:;|]+)?|[^\\0-\\x1F$#*?\"<>@:;|]+)?/\n            .source + // shell symbol\n            /[$#]/.source + // bash command\n            /(?:[^\\\\\\r\\n'\"<$]|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<<str>>)+/.source.replace(\n              /<<str>>/g,\n              function () {\n                return strings\n              }\n            ),\n          'm'\n        ),\n        greedy: true,\n        inside: {\n          info: {\n            // foo@bar:~/files$ exit\n            // foo@bar$ exit\n            // ~/files$ exit\n            pattern: /^[^#$]+/,\n            alias: 'punctuation',\n            inside: {\n              user: /^[^\\s@:$#*!/\\\\]+@[^\\r\\n@:$#*!/\\\\]+/,\n              punctuation: /:/,\n              path: /[\\s\\S]+/\n            }\n          },\n          bash: {\n            pattern: /(^[$#]\\s*)\\S[\\s\\S]*/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\n    }\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] =\n      Prism.languages['shell-session']\n  })(Prism)\n}\n"},"lineCount":66}},"error":null,"hash":"007a1723ee2f8d62ab9af91b7b387b8f","cacheData":{"env":{}}}