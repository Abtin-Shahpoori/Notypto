{"id":"../../node_modules/stringify-entities/lib/util/format-smart.js","dependencies":[{"name":"/home/abtin/Desktop/Pinote/package.json","includedInParent":true,"mtime":1634470489760},{"name":"/home/abtin/Desktop/Pinote/node_modules/stringify-entities/package.json","includedInParent":true,"mtime":1632151212591},{"name":"./to-hexadecimal.js","loc":{"line":9,"column":28},"parent":"/home/abtin/Desktop/Pinote/node_modules/stringify-entities/lib/util/format-smart.js","resolved":"/home/abtin/Desktop/Pinote/node_modules/stringify-entities/lib/util/to-hexadecimal.js"},{"name":"./to-decimal.js","loc":{"line":10,"column":24},"parent":"/home/abtin/Desktop/Pinote/node_modules/stringify-entities/lib/util/format-smart.js","resolved":"/home/abtin/Desktop/Pinote/node_modules/stringify-entities/lib/util/to-decimal.js"},{"name":"./to-named.js","loc":{"line":11,"column":22},"parent":"/home/abtin/Desktop/Pinote/node_modules/stringify-entities/lib/util/format-smart.js","resolved":"/home/abtin/Desktop/Pinote/node_modules/stringify-entities/lib/util/to-named.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatSmart = formatSmart;\n\nvar _toHexadecimal = require(\"./to-hexadecimal.js\");\n\nvar _toDecimal = require(\"./to-decimal.js\");\n\nvar _toNamed = require(\"./to-named.js\");\n\n/**\n * @typedef {Object} FormatSmartOptions\n * @property {boolean} [useNamedReferences=false] Prefer named character references (`&amp;`) where possible (`boolean?`, default: `false`)\n * @property {boolean} [useShortestReferences=false] Prefer the shortest possible reference, if that results in less bytes (`boolean?`, default: `false`). **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`\n * @property {boolean} [omitOptionalSemicolons=false] Whether to omit semicolons when possible (`boolean?`, default: `false`). **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier. Omitting semicolons is possible for legacy named references in certain cases, and numeric references in some cases\n * @property {boolean} [attribute=false] Only needed when operating dangerously with `omitOptionalSemicolons: true`. Create character references which don’t fail in attributes (`boolean?`, default: `false`).\n */\n\n/**\n * Encode `character` according to `options`.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nfunction formatSmart(code, next, options) {\n  /** @type {string} */\n  var named;\n  /** @type {string} */\n\n  var numeric;\n  /** @type {string} */\n\n  var decimal;\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = (0, _toNamed.toNamed)(code, next, options.omitOptionalSemicolons, options.attribute);\n  }\n\n  if (options.useShortestReferences || !named) {\n    numeric = (0, _toHexadecimal.toHexadecimal)(code, next, options.omitOptionalSemicolons); // Use the shortest numeric reference when requested.\n    // A simple algorithm would use decimal for all code points under 100, as\n    // those are shorter than hexadecimal:\n    //\n    // * `&#99;` vs `&#x63;` (decimal shorter)\n    // * `&#100;` vs `&#x64;` (equal)\n    //\n    // However, because we take `next` into consideration when `omit` is used,\n    // And it would be possible that decimals are shorter on bigger values as\n    // well if `next` is hexadecimal but not decimal, we instead compare both.\n\n    if (options.useShortestReferences) {\n      decimal = (0, _toDecimal.toDecimal)(code, next, options.omitOptionalSemicolons);\n\n      if (decimal.length < numeric.length) {\n        numeric = decimal;\n      }\n    }\n  }\n\n  return named && (!options.useShortestReferences || named.length < numeric.length) ? named : numeric;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":10,"column":0}},{"generated":{"line":12,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":11,"column":0}},{"generated":{"line":14,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":1,"column":0}},{"generated":{"line":15,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":2,"column":0}},{"generated":{"line":16,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":3,"column":0}},{"generated":{"line":17,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":4,"column":0}},{"generated":{"line":18,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":5,"column":0}},{"generated":{"line":19,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":6,"column":0}},{"generated":{"line":20,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":7,"column":0}},{"generated":{"line":22,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":13,"column":0}},{"generated":{"line":23,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":14,"column":0}},{"generated":{"line":24,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":15,"column":0}},{"generated":{"line":25,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":16,"column":0}},{"generated":{"line":26,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":17,"column":0}},{"generated":{"line":27,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":18,"column":0}},{"generated":{"line":28,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":19,"column":0}},{"generated":{"line":29,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":20,"column":0}},{"generated":{"line":30,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":21,"column":7}},{"name":"formatSmart","generated":{"line":30,"column":9},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":21,"column":16}},{"generated":{"line":30,"column":20},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":21,"column":7}},{"name":"code","generated":{"line":30,"column":21},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":21,"column":28}},{"generated":{"line":30,"column":25},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":21,"column":7}},{"name":"next","generated":{"line":30,"column":27},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":21,"column":34}},{"generated":{"line":30,"column":31},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":21,"column":7}},{"name":"options","generated":{"line":30,"column":33},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":21,"column":40}},{"generated":{"line":30,"column":40},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":21,"column":7}},{"generated":{"line":30,"column":42},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":21,"column":49}},{"generated":{"line":31,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":22,"column":2}},{"generated":{"line":32,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":23,"column":2}},{"name":"named","generated":{"line":32,"column":6},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":23,"column":6}},{"generated":{"line":32,"column":11},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":23,"column":2}},{"generated":{"line":33,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":24,"column":2}},{"generated":{"line":35,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":25,"column":2}},{"name":"numeric","generated":{"line":35,"column":6},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":25,"column":6}},{"generated":{"line":35,"column":13},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":25,"column":2}},{"generated":{"line":36,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":26,"column":2}},{"generated":{"line":38,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":27,"column":2}},{"name":"decimal","generated":{"line":38,"column":6},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":27,"column":6}},{"generated":{"line":38,"column":13},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":27,"column":2}},{"generated":{"line":40,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":29,"column":2}},{"name":"options","generated":{"line":40,"column":6},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":29,"column":6}},{"generated":{"line":40,"column":13},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":29,"column":13}},{"name":"useNamedReferences","generated":{"line":40,"column":14},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":29,"column":14}},{"generated":{"line":40,"column":32},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":29,"column":6}},{"name":"options","generated":{"line":40,"column":36},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":29,"column":36}},{"generated":{"line":40,"column":43},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":29,"column":43}},{"name":"useShortestReferences","generated":{"line":40,"column":44},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":29,"column":44}},{"generated":{"line":40,"column":65},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":29,"column":2}},{"generated":{"line":40,"column":67},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":29,"column":67}},{"name":"named","generated":{"line":41,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":30,"column":4}},{"name":"named","generated":{"line":41,"column":4},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":30,"column":4}},{"generated":{"line":41,"column":9},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":30,"column":9}},{"generated":{"line":41,"column":12},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":30,"column":12}},{"name":"code","generated":{"line":41,"column":34},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":31,"column":6}},{"generated":{"line":41,"column":38},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":30,"column":12}},{"name":"next","generated":{"line":41,"column":40},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":32,"column":6}},{"generated":{"line":41,"column":44},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":30,"column":12}},{"name":"options","generated":{"line":41,"column":46},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":33,"column":6}},{"generated":{"line":41,"column":53},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":33,"column":13}},{"name":"omitOptionalSemicolons","generated":{"line":41,"column":54},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":33,"column":14}},{"generated":{"line":41,"column":76},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":30,"column":12}},{"name":"options","generated":{"line":41,"column":78},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":34,"column":6}},{"generated":{"line":41,"column":85},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":34,"column":13}},{"name":"attribute","generated":{"line":41,"column":86},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":34,"column":14}},{"generated":{"line":41,"column":95},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":30,"column":12}},{"generated":{"line":41,"column":96},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":30,"column":4}},{"generated":{"line":42,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":36,"column":3}},{"generated":{"line":44,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":38,"column":2}},{"name":"options","generated":{"line":44,"column":6},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":38,"column":6}},{"generated":{"line":44,"column":13},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":38,"column":13}},{"name":"useShortestReferences","generated":{"line":44,"column":14},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":38,"column":14}},{"generated":{"line":44,"column":35},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":38,"column":6}},{"generated":{"line":44,"column":39},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":38,"column":39}},{"name":"named","generated":{"line":44,"column":40},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":38,"column":40}},{"generated":{"line":44,"column":45},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":38,"column":2}},{"generated":{"line":44,"column":47},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":38,"column":47}},{"name":"numeric","generated":{"line":45,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":39,"column":4}},{"name":"numeric","generated":{"line":45,"column":4},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":39,"column":4}},{"generated":{"line":45,"column":11},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":39,"column":11}},{"generated":{"line":45,"column":14},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":39,"column":14}},{"name":"code","generated":{"line":45,"column":48},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":39,"column":28}},{"generated":{"line":45,"column":52},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":39,"column":14}},{"name":"next","generated":{"line":45,"column":54},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":39,"column":34}},{"generated":{"line":45,"column":58},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":39,"column":14}},{"name":"options","generated":{"line":45,"column":60},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":39,"column":40}},{"generated":{"line":45,"column":67},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":39,"column":47}},{"name":"omitOptionalSemicolons","generated":{"line":45,"column":68},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":39,"column":48}},{"generated":{"line":45,"column":90},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":39,"column":14}},{"generated":{"line":45,"column":91},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":39,"column":4}},{"generated":{"line":45,"column":92},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":38,"column":47}},{"generated":{"line":45,"column":93},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":41,"column":4}},{"generated":{"line":46,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":42,"column":4}},{"generated":{"line":47,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":43,"column":4}},{"generated":{"line":48,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":44,"column":4}},{"generated":{"line":49,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":45,"column":4}},{"generated":{"line":50,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":46,"column":4}},{"generated":{"line":51,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":47,"column":4}},{"generated":{"line":52,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":48,"column":4}},{"generated":{"line":53,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":49,"column":4}},{"generated":{"line":54,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":50,"column":4}},{"generated":{"line":56,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":51,"column":4}},{"name":"options","generated":{"line":56,"column":8},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":51,"column":8}},{"generated":{"line":56,"column":15},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":51,"column":15}},{"name":"useShortestReferences","generated":{"line":56,"column":16},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":51,"column":16}},{"generated":{"line":56,"column":37},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":51,"column":4}},{"generated":{"line":56,"column":39},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":51,"column":39}},{"name":"decimal","generated":{"line":57,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":52,"column":6}},{"name":"decimal","generated":{"line":57,"column":6},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":52,"column":6}},{"generated":{"line":57,"column":13},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":52,"column":13}},{"generated":{"line":57,"column":16},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":52,"column":16}},{"name":"code","generated":{"line":57,"column":42},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":52,"column":26}},{"generated":{"line":57,"column":46},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":52,"column":16}},{"name":"next","generated":{"line":57,"column":48},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":52,"column":32}},{"generated":{"line":57,"column":52},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":52,"column":16}},{"name":"options","generated":{"line":57,"column":54},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":52,"column":38}},{"generated":{"line":57,"column":61},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":52,"column":45}},{"name":"omitOptionalSemicolons","generated":{"line":57,"column":62},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":52,"column":46}},{"generated":{"line":57,"column":84},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":52,"column":16}},{"generated":{"line":57,"column":85},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":52,"column":6}},{"generated":{"line":59,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":54,"column":6}},{"name":"decimal","generated":{"line":59,"column":10},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":54,"column":10}},{"generated":{"line":59,"column":17},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":54,"column":17}},{"name":"length","generated":{"line":59,"column":18},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":54,"column":18}},{"generated":{"line":59,"column":24},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":54,"column":10}},{"name":"numeric","generated":{"line":59,"column":27},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":54,"column":27}},{"generated":{"line":59,"column":34},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":54,"column":34}},{"name":"length","generated":{"line":59,"column":35},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":54,"column":35}},{"generated":{"line":59,"column":41},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":54,"column":6}},{"generated":{"line":59,"column":43},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":54,"column":43}},{"name":"numeric","generated":{"line":60,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":55,"column":8}},{"name":"numeric","generated":{"line":60,"column":8},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":55,"column":8}},{"generated":{"line":60,"column":15},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":55,"column":15}},{"name":"decimal","generated":{"line":60,"column":18},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":55,"column":18}},{"generated":{"line":60,"column":25},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":55,"column":8}},{"generated":{"line":61,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":56,"column":7}},{"generated":{"line":62,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":57,"column":5}},{"generated":{"line":63,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":58,"column":3}},{"generated":{"line":65,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":60,"column":2}},{"name":"named","generated":{"line":65,"column":9},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":60,"column":9}},{"generated":{"line":65,"column":14},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":60,"column":14}},{"generated":{"line":65,"column":19},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":61,"column":5}},{"name":"options","generated":{"line":65,"column":20},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":61,"column":6}},{"generated":{"line":65,"column":27},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":61,"column":13}},{"name":"useShortestReferences","generated":{"line":65,"column":28},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":61,"column":14}},{"generated":{"line":65,"column":49},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":61,"column":5}},{"name":"named","generated":{"line":65,"column":53},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":61,"column":39}},{"generated":{"line":65,"column":58},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":61,"column":44}},{"name":"length","generated":{"line":65,"column":59},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":61,"column":45}},{"generated":{"line":65,"column":65},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":61,"column":39}},{"name":"numeric","generated":{"line":65,"column":68},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":61,"column":54}},{"generated":{"line":65,"column":75},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":61,"column":61}},{"name":"length","generated":{"line":65,"column":76},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":61,"column":62}},{"generated":{"line":65,"column":82},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":60,"column":14}},{"generated":{"line":65,"column":83},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":60,"column":9}},{"name":"named","generated":{"line":65,"column":86},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":62,"column":6}},{"generated":{"line":65,"column":91},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":60,"column":9}},{"name":"numeric","generated":{"line":65,"column":94},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":63,"column":6}},{"generated":{"line":65,"column":101},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":60,"column":2}},{"generated":{"line":66,"column":0},"source":"../../node_modules/stringify-entities/lib/util/format-smart.js","original":{"line":64,"column":1}}],"sources":{"../../node_modules/stringify-entities/lib/util/format-smart.js":"/**\n * @typedef {Object} FormatSmartOptions\n * @property {boolean} [useNamedReferences=false] Prefer named character references (`&amp;`) where possible (`boolean?`, default: `false`)\n * @property {boolean} [useShortestReferences=false] Prefer the shortest possible reference, if that results in less bytes (`boolean?`, default: `false`). **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`\n * @property {boolean} [omitOptionalSemicolons=false] Whether to omit semicolons when possible (`boolean?`, default: `false`). **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier. Omitting semicolons is possible for legacy named references in certain cases, and numeric references in some cases\n * @property {boolean} [attribute=false] Only needed when operating dangerously with `omitOptionalSemicolons: true`. Create character references which don’t fail in attributes (`boolean?`, default: `false`).\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Encode `character` according to `options`.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  /** @type {string} */\n  var named\n  /** @type {string} */\n  var numeric\n  /** @type {string} */\n  var decimal\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  if (options.useShortestReferences || !named) {\n    numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n\n    // Use the shortest numeric reference when requested.\n    // A simple algorithm would use decimal for all code points under 100, as\n    // those are shorter than hexadecimal:\n    //\n    // * `&#99;` vs `&#x63;` (decimal shorter)\n    // * `&#100;` vs `&#x64;` (equal)\n    //\n    // However, because we take `next` into consideration when `omit` is used,\n    // And it would be possible that decimals are shorter on bigger values as\n    // well if `next` is hexadecimal but not decimal, we instead compare both.\n    if (options.useShortestReferences) {\n      decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n      if (decimal.length < numeric.length) {\n        numeric = decimal\n      }\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n"},"lineCount":null}},"error":null,"hash":"4c808bb8cc6b59b4fd86a0ee50298843","cacheData":{"env":{}}}