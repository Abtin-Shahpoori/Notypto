{"id":"../../node_modules/refractor/lang/vala.js","dependencies":[{"name":"/home/abtin/Desktop/Pinote/package.json","includedInParent":true,"mtime":1632153636934},{"name":"/home/abtin/Desktop/Pinote/node_modules/refractor/package.json","includedInParent":true,"mtime":1632151213327}],"generated":{"js":"'use strict'\n\nmodule.exports = vala\nvala.displayName = 'vala'\nvala.aliases = []\nfunction vala(Prism) {\n  Prism.languages.vala = Prism.languages.extend('clike', {\n    // Classes copied from prism-csharp\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern:\n          /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern:\n          /((?:\\b(?:class|interface|new|struct|enum)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    keyword:\n      /\\b(?:bool|char|double|float|null|size_t|ssize_t|string|unichar|void|int|int8|int16|int32|int64|long|short|uchar|uint|uint8|uint16|uint32|uint64|ulong|ushort|class|delegate|enum|errordomain|interface|namespace|struct|break|continue|do|for|foreach|return|while|else|if|switch|assert|case|default|abstract|const|dynamic|ensures|extern|inline|internal|override|private|protected|public|requires|signal|static|virtual|volatile|weak|async|owned|unowned|try|catch|finally|throw|as|base|construct|delete|get|in|is|lock|new|out|params|ref|sizeof|set|this|throws|typeof|using|value|var|yield)\\b/i,\n    function: /\\b\\w+(?=\\s*\\()/,\n    number:\n      /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n    operator:\n      /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n    punctuation: /[{}[\\];(),.:]/,\n    constant: /\\b[A-Z0-9_]+\\b/\n  })\n  Prism.languages.insertBefore('vala', 'string', {\n    'raw-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'template-string': {\n      pattern: /@\"[\\s\\S]*?\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\$\\(?|\\)$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.vala\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('vala', 'keyword', {\n    regex: {\n      pattern:\n        /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\//,\n        'regex-flags': /^[a-z]+$/\n      }\n    }\n  })\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/refractor/lang/vala.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}}],"sources":{"../../node_modules/refractor/lang/vala.js":"'use strict'\n\nmodule.exports = vala\nvala.displayName = 'vala'\nvala.aliases = []\nfunction vala(Prism) {\n  Prism.languages.vala = Prism.languages.extend('clike', {\n    // Classes copied from prism-csharp\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern:\n          /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern:\n          /((?:\\b(?:class|interface|new|struct|enum)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    keyword:\n      /\\b(?:bool|char|double|float|null|size_t|ssize_t|string|unichar|void|int|int8|int16|int32|int64|long|short|uchar|uint|uint8|uint16|uint32|uint64|ulong|ushort|class|delegate|enum|errordomain|interface|namespace|struct|break|continue|do|for|foreach|return|while|else|if|switch|assert|case|default|abstract|const|dynamic|ensures|extern|inline|internal|override|private|protected|public|requires|signal|static|virtual|volatile|weak|async|owned|unowned|try|catch|finally|throw|as|base|construct|delete|get|in|is|lock|new|out|params|ref|sizeof|set|this|throws|typeof|using|value|var|yield)\\b/i,\n    function: /\\b\\w+(?=\\s*\\()/,\n    number:\n      /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n    operator:\n      /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n    punctuation: /[{}[\\];(),.:]/,\n    constant: /\\b[A-Z0-9_]+\\b/\n  })\n  Prism.languages.insertBefore('vala', 'string', {\n    'raw-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'template-string': {\n      pattern: /@\"[\\s\\S]*?\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\$\\(?|\\)$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.vala\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('vala', 'keyword', {\n    regex: {\n      pattern:\n        /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\//,\n        'regex-flags': /^[a-z]+$/\n      }\n    }\n  })\n}\n"},"lineCount":96}},"error":null,"hash":"47fd6427320eb933697d628f98e9bf43","cacheData":{"env":{}}}